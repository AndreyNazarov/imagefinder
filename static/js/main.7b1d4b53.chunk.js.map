{"version":3,"sources":["components/SearchBar/SearchBar.js","services/apiService.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/PicturesErrorView/PicturesErrorView.js","components/Loader/Loader.js","components/Button/Button.js","components/PicturesInfo/PicturesInfo.js","App.js","index.js"],"names":["SearchBar","onSubmit","useState","input","setInput","className","event","preventDefault","trim","toast","error","type","autoComplete","autoFocus","placeholder","value","onChange","currentTarget","toLowerCase","API","fetchPictures","query","page","fetch","then","response","ok","json","Promise","reject","Error","modalRoot","document","querySelector","Modal","src","alt","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","e","code","createPortal","onClick","target","ImageGalleryItem","largePicture","showModal","setShowModal","toggleModal","ImageGallery","pictures","map","picture","id","webformatURL","tags","largeImageURL","PicturesErrorView","message","role","PendingView","color","height","width","timeout","Button","PicturesInfo","searchQuery","setPictures","setPage","setError","status","setStatus","console","log","apiService","newPictures","total","prevPictures","hits","scrollTo","top","documentElement","scrollHeight","behavior","catch","onLoadMore","prevPage","App","setPicturesName","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"6WAKe,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAAY,EACpBC,mBAAS,IADW,mBACvCC,EADuC,KAChCC,EADgC,KAoB9C,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaJ,SAZZ,SAACK,GACpBA,EAAMC,iBACe,KAAjBJ,EAAMK,QAIVP,EAASE,GACTC,EAAS,KAJPK,IAAMC,MAAM,8BASZ,UACE,wBAAQC,KAAK,SAASN,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVM,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,MAAOZ,EACPa,SA3BiB,SAACV,GACxBF,EAASE,EAAMW,cAAcF,MAAMG,uB,WCAvC,IAIeC,EAJH,CACVC,cAdF,SAAuBC,EAAOC,GAG5B,OAAOC,MAAM,GAAD,OAFK,2BAEL,sDAC+CF,EAD/C,iBAC6DC,EAD7D,4BADI,uCAGdE,MAAK,SAACC,GACN,OAAIA,EAASC,GACJD,EAASE,OAEXC,QAAQC,OAAO,IAAIC,MAAM,8CCJ9BC,G,YAAYC,SAASC,cAAc,gBAE1B,SAASC,EAAT,GAAuC,IAAtBC,EAAqB,EAArBA,IAAKC,EAAgB,EAAhBA,IAAKC,EAAW,EAAXA,QACxCC,qBAAU,WAER,OADAC,OAAOC,iBAAiB,UAAWC,GAC5B,WACLF,OAAOG,oBAAoB,UAAWD,OAI1C,IAAMA,EAAgB,SAACE,GACN,WAAXA,EAAEC,MACJP,KAUJ,OAAOQ,uBACL,qBAAKxC,UAAU,UAAUyC,QAPC,SAACxC,GACvBA,EAAMW,gBAAkBX,EAAMyC,QAChCV,KAKF,SACE,qBAAKhC,UAAU,QAAf,SACE,qBAAK8B,IAAKA,EAAKC,IAAKA,QAGxBL,G,MC7BW,SAASiB,EAAT,GAAuD,IAA3Bb,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,IAAKa,EAAgB,EAAhBA,aAAgB,EACjC/C,oBAAS,GADwB,mBAC5DgD,EAD4D,KACjDC,EADiD,KAG7DC,EAAc,WAClBD,GAAa,SAACD,GAAD,OAAgBA,MAG/B,OACE,qBAAI7C,UAAU,mBAAd,UACE,qBACEyC,QAASM,EACTjB,IAAKA,EACLC,IAAKA,EACL/B,UAAU,0BAEX6C,GACC,cAAChB,EAAD,CAAOG,QAASe,EAAajB,IAAKc,EAAcb,IAAKA,OCjB9C,SAASiB,EAAT,GAAqC,IAAbC,EAAY,EAAZA,SACrC,OACE,oBAAIjD,UAAU,eAAd,SACGiD,EAASC,KAAI,SAACC,EAASC,GAAV,OACZ,cAACT,EAAD,CACEb,IAAKqB,EAAQE,aACbtB,IAAKoB,EAAQG,KACbV,aAAcO,EAAQI,eACjBH,QCXA,SAASI,EAAT,GAAyC,IAAZC,EAAW,EAAXA,QAC1C,OACE,qBAAKC,KAAK,QAAV,SACE,4BAAID,M,iCCCK,SAASE,IACtB,OACE,cAAC,IAAD,CACE3D,UAAU,SACVM,KAAK,UACLsD,MAAM,UACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,M,MCTA,SAASC,EAAT,GAA8B,IAAZvB,EAAW,EAAXA,QAK/B,OACE,wBAAQA,QALK,WACbA,KAIyBnC,KAAK,SAASN,UAAU,SAAjD,uBCDW,SAASiE,EAAT,GAAwC,IAAhBC,EAAe,EAAfA,YAAe,EACpBrE,mBAAS,IADW,mBAC7CoD,EAD6C,KACnCkB,EADmC,OAE5BtE,mBAAS,GAFmB,mBAE7CoB,EAF6C,KAEvCmD,EAFuC,OAG1BvE,mBAAS,MAHiB,mBAG7CQ,EAH6C,KAGtCgE,EAHsC,OAIxBxE,mBAAS,QAJe,mBAI7CyE,EAJ6C,KAIrCC,EAJqC,KAMpDtC,qBAAU,WACRuC,QAAQC,IAAI,gBACPP,IAGLK,EAAU,WAEVG,EACG3D,cAAcmD,EAAajD,GAC3BE,MAAK,SAACwD,GACL,OAA0B,IAAtBA,EAAYC,OACdT,GACE,SAACU,GAAD,4BAAsBA,GAAtB,YAAuCF,EAAYG,SACnDP,EAAU,aAEZC,QAAQC,IAAI,sCACZvC,OAAO6C,SAAS,CACdC,IAAKrD,SAASsD,gBAAgBC,aAC9BC,SAAU,YAIP5D,QAAQC,OAAO,IAAIC,MAAM,uBAGjC2D,OAAM,SAAC/E,GACNgE,EAAShE,GACTkE,EAAU,kBAEb,CAACtD,EAAMiD,IAQV,MAAe,SAAXI,EACK,0IAEM,YAAXA,EACK,cAAC,EAAD,IAEM,aAAXA,EACK,cAACd,EAAD,CAAmBC,QAASpD,EAAMoD,UAE5B,aAAXa,EAEA,qCACE,cAAC,EAAD,CAAcrB,SAAUA,IACxB,cAACe,EAAD,CAAQvB,QAnBK,SAAb4C,IACJb,QAAQC,IAAI,4GAAwBY,GACpCjB,GAAQ,SAACkB,GAAD,OAAcA,EAAW,KACjCd,QAAQC,IAAI,WAAYL,IAgBSnD,KAAMA,YAJzC,ECrDa,SAASsE,IAAO,IAAD,EACW1F,mBAAS,IADpB,mBACrBqE,EADqB,KACRsB,EADQ,KAG5B,OACE,gCACE,cAAC7F,EAAD,CAAWC,SAAU4F,IACrB,cAACvB,EAAD,CAAcC,YAAaA,IAC3B,cAAC,IAAD,CAAgBuB,UAAW,SCTjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjE,SAASkE,eAAe,W","file":"static/js/main.7b1d4b53.chunk.js","sourcesContent":["import \"./SearchBarStyles.css\";\r\nimport { useState } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function SearchBar({ onSubmit }) {\r\n  const [input, setInput] = useState(\"\");\r\n\r\n  // static propTypes = {\r\n  //   onSubmit: PropTypes.func.isRequired,\r\n  // };\r\n\r\n  const handleNameChange = (event) => {\r\n    setInput(event.currentTarget.value.toLowerCase());\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (input.trim() === \"\") {\r\n      toast.error(\"Write your request,please\");\r\n      return;\r\n    }\r\n    onSubmit(input);\r\n    setInput(\"\");\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          value={input}\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","function fetchPictures(query, page) {\r\n  const BASE_URL = \"https://pixabay.com/api/\";\r\n  const API_KEY = \"18616543-61f088c3928fc4bac834774e6\";\r\n  return fetch(\r\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${query}&page=${page}&per_page=12&key=${API_KEY}`\r\n  ).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(\"Something is wrong, please try again\"));\r\n  });\r\n}\r\n\r\nconst API = {\r\n  fetchPictures,\r\n};\r\n\r\nexport default API;\r\n","import \"./ModalStyles.css\";\r\nimport { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst modalRoot = document.querySelector(\"#modal-root\");\r\n\r\nexport default function Modal({ src, alt, onClose }) {\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = (event) => {\r\n    if (event.currentTarget === event.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\r\n      <div className=\"Modal\">\r\n        <img src={src} alt={alt} />\r\n      </div>\r\n    </div>,\r\n    modalRoot\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  alt: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func,\r\n};\r\n","import { useState } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport \"./ImageGalleryItemStyles.css\";\r\n\r\nexport default function ImageGalleryItem({ src, alt, largePicture }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setShowModal((showModal) => !showModal);\r\n  };\r\n\r\n  return (\r\n    <li className=\"ImageGalleryItem\">\r\n      <img\r\n        onClick={toggleModal}\r\n        src={src}\r\n        alt={alt}\r\n        className=\"ImageGalleryItemImage\"\r\n      />\r\n      {showModal && (\r\n        <Modal onClose={toggleModal} src={largePicture} alt={alt} />\r\n      )}\r\n    </li>\r\n  );\r\n}\r\n","import \"./ImageGallery.css\";\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nexport default function ImageGallery({ pictures }) {\r\n  return (\r\n    <ul className=\"ImageGallery\">\r\n      {pictures.map((picture, id) => (\r\n        <ImageGalleryItem\r\n          src={picture.webformatURL}\r\n          alt={picture.tags}\r\n          largePicture={picture.largeImageURL}\r\n          key={id}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","export default function PicturesErrorView({ message }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>{message}</p>\r\n    </div>\r\n  );\r\n}\r\n","import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"./LoaderStyles.css\";\r\n\r\nexport default function PendingView() {\r\n  return (\r\n    <Loader\r\n      className=\"Loader\"\r\n      type=\"Circles\"\r\n      color=\"#00BFFF\"\r\n      height={100}\r\n      width={100}\r\n      timeout={3000}\r\n    />\r\n  );\r\n}\r\n","import \"./ButtonStyles.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function Button({ onClick }) {\r\n  const scroll = () => {\r\n    onClick();\r\n  };\r\n\r\n  return (\r\n    <button onClick={scroll} type=\"button\" className=\"Button\">\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func,\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport apiService from \"../../services/apiService\";\r\nimport ImageGallery from \"../ImageGallery/\";\r\nimport PicturesErrorView from \"../PicturesErrorView/PicturesErrorView\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport Button from \"../Button/Button\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport default function PicturesInfo({ searchQuery }) {\r\n  const [pictures, setPictures] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(\"idle\");\r\n\r\n  useEffect(() => {\r\n    console.log(\"First render\");\r\n    if (!searchQuery) {\r\n      return;\r\n    }\r\n    setStatus(\"pending\");\r\n\r\n    apiService\r\n      .fetchPictures(searchQuery, page)\r\n      .then((newPictures) => {\r\n        if (newPictures.total !== 0) {\r\n          setPictures(\r\n            (prevPictures) => [...prevPictures, ...newPictures.hits],\r\n            setStatus(\"resolved\")\r\n          );\r\n          console.log(\"fetch pictures in Api Service\");\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: \"smooth\",\r\n          });\r\n          return;\r\n        }\r\n        return Promise.reject(new Error(\"Invalid request\"));\r\n      })\r\n\r\n      .catch((error) => {\r\n        setError(error);\r\n        setStatus(\"rejected\");\r\n      });\r\n  }, [page, searchQuery]);\r\n\r\n  const onLoadMore = () => {\r\n    console.log(\"добавляем картинок :\", onLoadMore);\r\n    setPage((prevPage) => prevPage + 1);\r\n    console.log(\"+1 page:\", setPage);\r\n  };\r\n\r\n  if (status === \"idle\") {\r\n    return <h1>Введите свой запрос</h1>;\r\n  }\r\n  if (status === \"pending\") {\r\n    return <Loader />;\r\n  }\r\n  if (status === \"rejected\") {\r\n    return <PicturesErrorView message={error.message} />;\r\n  }\r\n  if (status === \"resolved\") {\r\n    return (\r\n      <>\r\n        <ImageGallery pictures={pictures} />\r\n        <Button onClick={onLoadMore} page={page} />\r\n      </>\r\n    );\r\n  }\r\n}\r\nPicturesInfo.propTypes = {\r\n  message: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n","import { useState } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport SearchBar from \"./components/SearchBar/SearchBar\";\nimport PicturesInfo from \"./components/PicturesInfo/PicturesInfo\";\n\nexport default function App() {\n  const [searchQuery, setPicturesName] = useState(\"\");\n\n  return (\n    <div>\n      <SearchBar onSubmit={setPicturesName} />\n      <PicturesInfo searchQuery={searchQuery} />\n      <ToastContainer autoClose={2000} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}